name: Deploy Icon Library
on:
  push:
    branches:
      - main
    # 只有指定文件变化才运行
    # paths:
    #   - package.json
  # 允许你从 Actions 选项卡手动运行此工作流程
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: write

jobs:
  # 构建工作
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # 修复时间戳
      - name: Restore timestamps
        uses: chetan/git-restore-mtime-action@v2
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies and build
        run: |
          rm -rf yarn.lock
          yarn install
          yarn build:icons
          yarn build:code
          yarn build

      # 检查版本
      - name: Check version changes
        uses: EndBug/version-check@v2
        id: check
        with:
          diff-search: true
          file-url: https://unpkg.com/ksw-rpom-icon-vue@latest/package.json
          static-checking: localIsNew

      # check是我们在上一段中为check步骤提供的id
      - name: Version update detected
        if: steps.check.outputs.changed == 'true'
        run: 'echo "发现版本更改！新版本： ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'

      # 发布到 NPM
      - name: Publish the package to NPM
        if: steps.check.outputs.changed == 'true'
        run: yarn clean-publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      # 部署 GitHub Pages
      - name: Deploy GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          git-config-name: GitHubActions
          git-config-email: GitHubActions@github.com
        continue-on-error: true  # 即使失败，也继续下一个步骤

      # 部署到 Centos 服务器
      - name: Deploy to Centos server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i --delete"
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
          EXCLUDE: "/dist/, /node_modules/"
          SCRIPT_BEFORE: |
            whoami
            ls -al
          SCRIPT_AFTER: |
            whoami
            ls -al
            echo $RSYNC_STDOUT
        continue-on-error: true  # 即使失败，也继续下一个步骤